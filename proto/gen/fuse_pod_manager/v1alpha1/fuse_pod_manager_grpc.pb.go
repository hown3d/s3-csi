// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: fuse_pod_manager/v1alpha1/fuse_pod_manager.proto

package fuse_pod_managerv1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FusePodManagerServiceClient is the client API for FusePodManagerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FusePodManagerServiceClient interface {
	ListFusePods(ctx context.Context, in *ListFusePodsRequest, opts ...grpc.CallOption) (*ListFusePodsResponse, error)
	CreateFusePod(ctx context.Context, in *CreateFusePodRequest, opts ...grpc.CallOption) (*CreateFusePodResponse, error)
	DeleteFusePod(ctx context.Context, in *DeleteFusePodRequest, opts ...grpc.CallOption) (*DeleteFusePodResponse, error)
}

type fusePodManagerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFusePodManagerServiceClient(cc grpc.ClientConnInterface) FusePodManagerServiceClient {
	return &fusePodManagerServiceClient{cc}
}

func (c *fusePodManagerServiceClient) ListFusePods(ctx context.Context, in *ListFusePodsRequest, opts ...grpc.CallOption) (*ListFusePodsResponse, error) {
	out := new(ListFusePodsResponse)
	err := c.cc.Invoke(ctx, "/fuse_pod_manager.v1alpha1.FusePodManagerService/ListFusePods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fusePodManagerServiceClient) CreateFusePod(ctx context.Context, in *CreateFusePodRequest, opts ...grpc.CallOption) (*CreateFusePodResponse, error) {
	out := new(CreateFusePodResponse)
	err := c.cc.Invoke(ctx, "/fuse_pod_manager.v1alpha1.FusePodManagerService/CreateFusePod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fusePodManagerServiceClient) DeleteFusePod(ctx context.Context, in *DeleteFusePodRequest, opts ...grpc.CallOption) (*DeleteFusePodResponse, error) {
	out := new(DeleteFusePodResponse)
	err := c.cc.Invoke(ctx, "/fuse_pod_manager.v1alpha1.FusePodManagerService/DeleteFusePod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FusePodManagerServiceServer is the server API for FusePodManagerService service.
// All implementations should embed UnimplementedFusePodManagerServiceServer
// for forward compatibility
type FusePodManagerServiceServer interface {
	ListFusePods(context.Context, *ListFusePodsRequest) (*ListFusePodsResponse, error)
	CreateFusePod(context.Context, *CreateFusePodRequest) (*CreateFusePodResponse, error)
	DeleteFusePod(context.Context, *DeleteFusePodRequest) (*DeleteFusePodResponse, error)
}

// UnimplementedFusePodManagerServiceServer should be embedded to have forward compatible implementations.
type UnimplementedFusePodManagerServiceServer struct {
}

func (UnimplementedFusePodManagerServiceServer) ListFusePods(context.Context, *ListFusePodsRequest) (*ListFusePodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFusePods not implemented")
}
func (UnimplementedFusePodManagerServiceServer) CreateFusePod(context.Context, *CreateFusePodRequest) (*CreateFusePodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFusePod not implemented")
}
func (UnimplementedFusePodManagerServiceServer) DeleteFusePod(context.Context, *DeleteFusePodRequest) (*DeleteFusePodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFusePod not implemented")
}

// UnsafeFusePodManagerServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FusePodManagerServiceServer will
// result in compilation errors.
type UnsafeFusePodManagerServiceServer interface {
	mustEmbedUnimplementedFusePodManagerServiceServer()
}

func RegisterFusePodManagerServiceServer(s grpc.ServiceRegistrar, srv FusePodManagerServiceServer) {
	s.RegisterService(&FusePodManagerService_ServiceDesc, srv)
}

func _FusePodManagerService_ListFusePods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFusePodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FusePodManagerServiceServer).ListFusePods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fuse_pod_manager.v1alpha1.FusePodManagerService/ListFusePods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FusePodManagerServiceServer).ListFusePods(ctx, req.(*ListFusePodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FusePodManagerService_CreateFusePod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFusePodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FusePodManagerServiceServer).CreateFusePod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fuse_pod_manager.v1alpha1.FusePodManagerService/CreateFusePod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FusePodManagerServiceServer).CreateFusePod(ctx, req.(*CreateFusePodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FusePodManagerService_DeleteFusePod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFusePodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FusePodManagerServiceServer).DeleteFusePod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fuse_pod_manager.v1alpha1.FusePodManagerService/DeleteFusePod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FusePodManagerServiceServer).DeleteFusePod(ctx, req.(*DeleteFusePodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FusePodManagerService_ServiceDesc is the grpc.ServiceDesc for FusePodManagerService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FusePodManagerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "fuse_pod_manager.v1alpha1.FusePodManagerService",
	HandlerType: (*FusePodManagerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListFusePods",
			Handler:    _FusePodManagerService_ListFusePods_Handler,
		},
		{
			MethodName: "CreateFusePod",
			Handler:    _FusePodManagerService_CreateFusePod_Handler,
		},
		{
			MethodName: "DeleteFusePod",
			Handler:    _FusePodManagerService_DeleteFusePod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fuse_pod_manager/v1alpha1/fuse_pod_manager.proto",
}
